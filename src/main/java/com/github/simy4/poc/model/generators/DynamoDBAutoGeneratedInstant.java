package com.github.simy4.poc.model.generators;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerated;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerator;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.time.Clock;
import java.time.Instant;

@DynamoDBAutoGenerated(generator = DynamoDBAutoGeneratedInstant.Generator.class)
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.FIELD, ElementType.METHOD})
public @interface DynamoDBAutoGeneratedInstant {
  DynamoDBAutoGenerateStrategy strategy() default DynamoDBAutoGenerateStrategy.ALWAYS;

  class Generator extends DynamoDBAutoGenerator.AbstractGenerator<Instant> {
    private final Clock clock;

    public Generator(Class<Instant> targetType, DynamoDBAutoGeneratedInstant annotation) {
      this(Clock.systemUTC(), annotation);
    }

    Generator(Clock clock, DynamoDBAutoGeneratedInstant annotation) {
      super(annotation.strategy());
      this.clock = clock;
    }

    @Override
    public Instant generate(Instant currentValue) {
      return Instant.now(clock);
    }
  }
}
